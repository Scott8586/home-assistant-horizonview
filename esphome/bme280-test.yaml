esphome:
  name: bme280-test
  platform: ESP8266
  board: nodemcuv2

# Enable logging
logger:

# Enable Home Assistant API
api:

ota:
  password: "f7a7374781f2d7fa55489f6f38e79ae0"

wifi:
  ssid: "srp-horizonview"
  password: "kicker87"

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "bme280-node Fallback Hotspot"
    password: "kicker87"

captive_portal:

# Example configuration entry
web_server:

# Activates prometheus /metrics endpoint
prometheus:

# Example configuration entry
time:
  - platform: sntp
    id: sntp_time
    servers:
      - 192.168.35.157
      
i2c:
  sda: 4
  scl: 5
  scan: True

# Example configuration entry
text_sensor:
  - platform: template
    name: BME280 Uptime String
    id: uptime_human
    icon: mdi:clock-start

# Example configuration entry
sensor:
  - platform: wifi_signal
    name: "BME280 WiFi Signal"
    update_interval: 60s
  - platform: uptime
    name: BME280 Uptime
    id: uptime_sensor
    update_interval: 60s
    on_raw_value:
      then:
        - text_sensor.template.publish:
            id: uptime_human
            state: !lambda |-
              int seconds = round(id(uptime_sensor).raw_state);
              int days = seconds / (24 * 3600);
              seconds = seconds % (24 * 3600);
              int hours = seconds / 3600;
              seconds = seconds % 3600;
              int minutes = seconds /  60;
              seconds = seconds % 60;
              return (
                (days ? String(days) + "d " : "") +
                (hours ? String(hours) + "h " : "") +
                (minutes ? String(minutes) + "m " : "") +
                (String(seconds) + "s")
              ).c_str();
  - platform: bme280
    temperature:
      name: "BME280 Temperature"
      id: bme280_temperature
    pressure:
      name: "BME280 Pressure"
      id: bme280_pressure
    humidity:
      name: "BME280 Relative Humidity"
      id: bme280_humidity
    address: 0x76
    update_interval: 60s
  - platform: template
    name: "Sea level pressure"
    lambda: |-
      const float STANDARD_ALTITUDE = 232.0; // Horizon View in meters, see note
      return id(bme280_pressure).state / powf(1 - ((0.0065 * STANDARD_ALTITUDE) /
        (id(bme280_temperature).state + (0.0065 * STANDARD_ALTITUDE) + 273.15)), 5.257); // in hPa
    update_interval: 60s
    unit_of_measurement: 'hPa'  
  - platform: template
    name: "BME280 bsolute Humidity"
    lambda: |-
      const float mw = 18.01534;    // molar mass of water g/mol
      const float r = 8.31447215;   // Universal gas constant J/mol/K
      return (6.112 * powf(2.718281828, (17.67 * id(bme280_temperature).state) /
        (id(bme280_temperature).state + 243.5)) * id(bme280_humidity).state * mw) /
        ((273.15 + id(bme280_temperature).state) * r); // in grams/m^3
    accuracy_decimals: 2
    update_interval: 60s
    icon: 'mdi:water'
    unit_of_measurement: 'g/m³'
  - platform: template
    name: "BME280 Dew Point"
    lambda: |-
      return (243.5*(log(id(bme280_humidity).state/100)+((17.67*id(bme280_temperature).state)/
      (243.5+id(bme280_temperature).state)))/(17.67-log(id(bme280_humidity).state/100)-
      ((17.67*id(bme280_temperature).state)/(243.5+id(bme280_temperature).state))));
    unit_of_measurement: °C
    icon: 'mdi:thermometer-alert'